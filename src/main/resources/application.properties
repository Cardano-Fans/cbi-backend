# Application Configuration
spring.application.name=cbi-backend-service
spring.profiles.active=${SPRING_PROFILES_ACTIVE:dev}

# MVC Configuration
spring.mvc.pathmatch.matching-strategy=ant_path_matcher

# Database Configuration
spring.datasource.url=jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5433}/${DB_NAME:yaci_indexer}?currentSchema=${DB_SCHEMA:mainnet}
spring.datasource.username=${DB_USERNAME:user}
spring.datasource.password=${DB_PASSWORD:}
spring.datasource.driver-class-name=org.postgresql.Driver

# HikariCP Configuration
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.maximum-pool-size=20
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.max-lifetime=1200000
spring.datasource.hikari.auto-commit=false
spring.datasource.hikari.pool-name=CbiHikariCP

# JPA Configuration
spring.jpa.hibernate.ddl-auto=none
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.use_sql_comments=false
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.properties.hibernate.jdbc.batch_size=25
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true
spring.jpa.properties.hibernate.batch_versioned_data=true

# Flyway Configuration
spring.flyway.enabled=true
spring.flyway.locations=classpath:db/migration
spring.flyway.baseline-on-migrate=true
spring.flyway.baseline-version=0
spring.flyway.validate-on-migrate=false
spring.flyway.out-of-order=true
spring.flyway.ignore-missing-migrations=true
spring.flyway.schemas=${DB_SCHEMA:mainnet}
spring.flyway.table=flyway_schema_history

# Cache Configuration
spring.cache.type=simple
spring.cache.cache-names=transaction-counts

# Web Resources
spring.web.resources.static-locations=classpath:/static/
spring.web.resources.cache.period=31536000

# Server Configuration
server.port=${SERVER_PORT:8080}
server.compression.enabled=true
server.compression.mime-types=text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json
server.compression.min-response-size=1024
server.error.include-message=always
server.error.include-binding-errors=always

# Management/Actuator Configuration
management.server.port=${MANAGEMENT_PORT:8081}
management.endpoints.web.exposure.include=health,info,metrics,prometheus,cache
management.endpoints.web.base-path=/actuator
management.endpoint.health.show-details=when-authorized
management.endpoint.health.show-components=always
management.endpoint.metrics.enabled=true
management.endpoint.prometheus.enabled=true
management.metrics.export.prometheus.enabled=true
management.metrics.tags.application=${spring.application.name}

# Logging Configuration
logging.level.de.crfa.cbi=${LOG_LEVEL:INFO}
logging.level.org.springframework.web=${LOG_LEVEL:INFO}
logging.level.org.hibernate.SQL=${SQL_LOG_LEVEL:WARN}
logging.level.org.hibernate.type.descriptor.sql=${SQL_LOG_LEVEL:WARN}
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n
logging.file.name=${LOG_FILE:logs/cbi-backend-service.log}
logging.file.max-size=100MB
logging.file.max-history=10

# CBI Configuration
cbi.cache.ttl=${CACHE_TTL:900}
cbi.cache.max-size=${CACHE_MAX_SIZE:100}
cbi.refresh.interval=${REFRESH_INTERVAL:900000}

# Yaci Store Core Configuration
store.cardano.host=${CARDANO_NODE_HOST:localhost}
store.cardano.port=${CARDANO_NODE_PORT:3001}
store.cardano.protocol-magic=${CARDANO_PROTOCOL_MAGIC:764824073}
store.cardano.n2c-node-socket-path=${CARDANO_NODE_SOCKET_PATH:/opt/cardano/cnode/sockets/node0.socket}
store.cardano.n2c-port=${CARDANO_N2C_PORT:3001}
store.cardano.sync-start-slot=${SYNC_START_SLOT:0}
store.cardano.sync-start-blockhash=${SYNC_START_BLOCKHASH:}
store.cardano.keep-alive-interval=${KEEP_ALIVE_INTERVAL:10}
store.cardano.protocol-version=${PROTOCOL_VERSION:7}

# Core Configuration (minimal database footprint)
store.core.enabled=${CORE_STORE_ENABLED:true}
store.core.include-block-cbor=${INCLUDE_BLOCK_CBOR:false}
store.core.include-transaction-cbor=${INCLUDE_TRANSACTION_CBOR:false}

# Event Publishing
store.events.enabled=${EVENTS_ENABLED:true}
store.events.transaction-events=${TRANSACTION_EVENTS:true}